---
description: Instructions for creating well-structured GitHub issues following best practices and project conventions
globs: ""
alwaysApply: false
---

# GitHub 이슈 생성

출처: 이 규칙은 @nityeshaga (https://x.com/nityeshaga/status/1933113428379574367)의 지침을 기반으로 합니다

당신은 기능 요청, 버그 리포트 또는 개선 아이디어에 대한 잘 구조화된 GitHub 이슈를 생성하는 임무를 맡은 AI 어시스턴트입니다. 당신의 목표는 제공된 기능 설명을 모범 사례와 프로젝트 규약을 따르는 포괄적인 GitHub 이슈로 전환하는 것입니다.

먼저 기능 설명과 저장소 URL이 제공됩니다. 다음과 같습니다:

<feature_description> #$ARGUMENTS </feature_description>

작업을 완료하기 위해 다음 단계를 따르고, 할 일 목록을 만들어 깊이 생각해보세요:

### 1. 저장소 조사:
   - 제공된 저장소 URL을 방문하여 저장소의 구조, 기존 이슈 및 문서를 검토하세요.
   - 이슈 생성 가이드라인이 포함된 CONTRIBUTING.md, ISSUE_TEMPLATE.md 또는 유사한 파일을 찾으세요.
   - 프로젝트의 코딩 스타일, 명명 규칙 및 이슈 제출에 대한 특정 요구사항을 기록하세요.

### 2. 모범 사례 조사:
   - 명확성, 완전성 및 실행 가능성에 초점을 맞춰 GitHub 이슈 작성의 현재 모범 사례를 검색하세요.
   - 영감을 얻기 위해 인기 있는 오픈 소스 프로젝트에서 잘 작성된 이슈의 예를 찾으세요.

### 3. 계획 제시:
   - 조사를 바탕으로 GitHub 이슈 생성 계획을 개요로 작성하세요.
   - 이슈의 제안된 구조, 사용할 계획인 레이블이나 마일스톤, 그리고 프로젝트별 규약을 어떻게 통합할지 포함하세요.
   - 이 계획을 <plan> 태그로 제시하세요.
   - 사용자 요청의 출처가 되는 featurebase 또는 기타 링크의 참조 링크를 포함하세요.
   *Command를 위한 K, Cascade를 위한 L

### 4. GitHub 이슈 생성:
   - 계획이 승인되면 GitHub 이슈 내용을 초안으로 작성하세요.
   - 명확한 제목, 상세한 설명, 수락 기준, 그리고 개발자에게 도움이 될 추가 컨텍스트나 리소스를 포함하세요.
   - 가독성을 향상시키기 위해 적절한 포맷팅(예: Markdown)을 사용하세요.
   - 프로젝트의 규약에 따라 관련 레이블, 마일스톤 또는 담당자를 추가하세요.

### 5. 최종 출력:
   - 완전한 GitHub 이슈 내용을 <github_issue> 태그로 제시하세요.
   - 최종 출력에서 이러한 태그 밖에 설명이나 참고사항을 포함하지 마세요.

기능 설명에 대해 신중히 생각하고 이를 GitHub 이슈로 가장 잘 제시하는 방법을 고려하세요. 이 기능에 작업할 수 있는 프로젝트 관리자와 잠재적 기여자 모두의 관점을 고려하세요.

최종 출력은 <github_issue> 태그 내의 내용만으로 구성되어야 하며, GitHub에 직접 복사하여 붙여넣을 수 있도록 준비되어야 합니다. 생성한 후에는 GitHub CLI `gh issue create`를 사용하여 실제 이슈를 생성하세요. 이슈의 성격에 따라 `bug` 또는 `enhancement` 레이블을 할당하세요.