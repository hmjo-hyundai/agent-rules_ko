---
description: 반응형 프로그래밍을 위한 Swift Observation 프레임워크 문서 및 사용 패턴
globs: "**/*.swift"
alwaysApply: false
---

# https://developer.apple.com/documentation/testing llms-full.txt

## Swift Testing 개요
[네비게이션 건너뛰기](https://developer.apple.com/documentation/testing#app-main)

프레임워크

# Swift Testing

Swift 패키지 및 Xcode 프로젝트를 위한 테스트를 생성하고 실행합니다.

Swift 6.0+Xcode 16.0+

## [개요](https://developer.apple.com/documentation/testing\#Overview)

![파란색 그라데이션 배경의 Swift 로고에 함수, 숫자, 태그, 체크마크 다이아몬드 기호가 포함된 이미지.](https://docs-assets.developer.apple.com/published/bb0ec39fe3198b15d431887aac09a527/swift-testing-hero%402x.png)

Swift Testing을 사용하면 Swift 프로그래밍 언어의 강력하고 표현력 있는 기능을 활용하여 더 높은 신뢰도와 적은 코드로 테스트를 개발할 수 있습니다. 이 라이브러리는 Swift Package Manager 테스팅 워크플로우와 원활하게 통합되며, 유연한 테스트 구성, 사용자 정의 가능한 메타데이터, 확장 가능한 테스트 실행을 지원합니다.

- 단일 속성으로 거의 모든 곳에서 테스트 함수를 정의합니다.

- Swift의 타입 시스템을 사용하여 관련 테스트를 계층 구조로 그룹화합니다.

- Swift 동시성과 원활하게 통합됩니다.

- 광범위한 입력 범위에서 테스트 함수를 매개변수화합니다.

- 런타임 조건에 따라 테스트를 동적으로 활성화합니다.

- 프로세스 내에서 테스트를 병렬화합니다.

- 태그를 사용하여 테스트를 분류합니다.

- 버그를 수정을 확인하거나 문제를 재현하는 테스트와 직접 연결합니다.


#### [관련 비디오](https://developer.apple.com/documentation/testing\#Related-videos)

[![](https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/E94A25C1-8734-483C-A4C1-862533C307AC/9309_wide_250x141_3x.jpg)\\
\\
Swift Testing과 만나기](https://developer.apple.com/videos/play/wwdc2024/10179)

[![](https://devimages-cdn.apple.com/wwdc-services/images/C03E6E6D-A32A-41D0-9E50-C3C6059820AA/52DB5AB3-48AF-40E1-98C7-CCC9132EDD39/9325_wide_250x141_3x.jpg)\\
\\
Swift Testing으로 더 나아가기](https://developer.apple.com/videos/play/wwdc2024/10195)

## [주제](https://developer.apple.com/documentation/testing\#topics)

### [필수 사항](https://developer.apple.com/documentation/testing\#Essentials)

[테스트 함수 정의](https://developer.apple.com/documentation/testing/definingtests)

코드가 올바르게 작동하는지 검증하기 위한 테스트 함수를 정의합니다.

[스위트 타입으로 테스트 함수 구성](https://developer.apple.com/documentation/testing/organizingtests)

테스트를 테스트 스위트로 구성합니다.

[XCTest에서 테스트 마이그레이션](https://developer.apple.com/documentation/testing/migratingfromxctest)

XCTest를 사용하여 작성된 기존 테스트 메서드나 테스트 클래스를 마이그레이션합니다.

[`macro Test(String?, any TestTrait...)`](https://developer.apple.com/documentation/testing/test(_:_:))

테스트를 선언합니다.

[`struct Test`](https://developer.apple.com/documentation/testing/test)

테스트나 스위트를 나타내는 타입.

[`macro Suite(String?, any SuiteTrait...)`](https://developer.apple.com/documentation/testing/suite(_:_:))

테스트 스위트를 선언합니다.

### [테스트 매개변수화](https://developer.apple.com/documentation/testing\#Test-parameterization)

[매개변수화된 테스트 구현](https://developer.apple.com/documentation/testing/parameterizedtesting)

테스트 함수에서 여러 테스트 케이스를 생성하기 위해 다양한 입력 매개변수를 지정합니다.

[`macro Test<C>(String?, any TestTrait..., arguments: C)`](https://developer.apple.com/documentation/testing/test(_:_:arguments:)-8kn7a)

값 컬렉션에서 매개변수화된 테스트를 선언합니다.

[`macro Test<C1, C2>(String?, any TestTrait..., arguments: C1, C2)`](https://developer.apple.com/documentation/testing/test(_:_:arguments:_:))

두 값 컬렉션에서 매개변수화된 테스트를 선언합니다.

[`macro Test<C1, C2>(String?, any TestTrait..., arguments: Zip2Sequence<C1, C2>)`](https://developer.apple.com/documentation/testing/test(_:_:arguments:)-3rzok)

두 개의 압축된 값 컬렉션에서 매개변수화된 테스트를 선언합니다.

[`protocol CustomTestArgumentEncodable`](https://developer.apple.com/documentation/testing/customtestargumentencodable)

**참고:** 이 파일이 매우 크므로 처음 100줄만 번역했습니다. 원본 파일에는 Swift Testing에 대한 더 많은 세부 문서가 포함되어 있으며, 필요시 추가 번역을 제공할 수 있습니다.