# Mermaid 다이어그램 생성

코드 구조와 관계를 시각화하기 위한 Mermaid 다이어그램을 생성합니다.

## 일반적인 다이어그램 타입:

### 1. 엔티티 관계 다이어그램
데이터베이스 스키마와 데이터 모델을 위한:
```
erDiagram
    CUSTOMER ||--o{ ORDER : places
    ORDER ||--|{ LINE-ITEM : contains
```

### 2. 플로우 차트
프로세스와 논리 흐름을 위한:
```
flowchart TD
    A[시작] --> B{결정}
    B -->|예| C[처리]
    B -->|아니오| D[종료]
```

### 3. 시퀀스 다이어그램
상호작용 흐름을 위한:
```
sequenceDiagram
    Client->>Server: 요청
    Server->>Database: 쿼리
    Database-->>Server: 결과
    Server-->>Client: 응답
```

### 4. 클래스 다이어그램
객체 지향 설계를 위한:
```
classDiagram
    class Animal {
        +name: string
        +age: int
        +makeSound()
    }
```

## 프로세스:
1. 소스 파일 분석 (SQL, 코드, 문서)
2. 엔티티와 관계 추출
3. 적절한 다이어그램 타입 생성
4. 관련 속성/메서드 포함
5. mermaid 컴파일러로 구문 검증
6. 지정된 위치에 저장

## 검증:
`npx -p @mermaid-js/mermaid-cli mmdc -i <input>.md -o test.md` 실행

## 모범 사례:
- 다이어그램을 집중적이고 읽기 쉽게 유지
- 일관된 네이밍 규칙 사용
- 관련 엔티티 그룹화
- 관계에 라벨 추가
- 관련 있는 곳에 카디널리티 포함
- 구조화를 위한 하위 그래프 사용
- 명확성을 위한 스타일링 추가