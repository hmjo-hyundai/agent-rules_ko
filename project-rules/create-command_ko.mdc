# 명령 생성

적절한 구조를 가진 새로운 사용자 정의 Claude 명령을 생성하기 위한 가이드입니다.

## 프로세스:

### 1. 목적 이해
- 이 명령이 해결하는 문제는 무엇인가?
- 누가 이 명령을 사용할 것인가?
- 예상되는 출력은 무엇인가?
- 사용자가 어떻게 상호작용할 것인가?

### 2. 카테고리 분류
명령 타입 결정:
- **계획**: 프로젝트 설정, 아키텍처 결정
- **구현**: 코드 생성, 기능 개발
- **분석**: 코드 리뷰, 성능 분석
- **테스팅**: 테스트 생성, 검증
- **문서화**: 문서 생성, 업데이트
- **워크플로우**: 다단계 프로세스
- **유틸리티**: 헬퍼 명령, 도구

### 3. 패턴 선택
유사한 기존 명령 연구:
- 구조와 흐름 분석
- 공통 패턴 파악
- 재사용 가능한 컴포넌트 식별
- 확립된 관례 따르기

### 4. 명령 위치
적절한 위치 선택:
- **프로젝트별**: `.claude/commands/`
- **사용자별**: `~/.claude/commands/`
- 재사용성과 컨텍스트 고려

### 5. 명령 구조
다음 섹션으로 생성:
- **제목**: 명확하고 액션 지향적인 이름
- **설명**: 한 줄 요약
- **사용법**: 매개변수와 함께 호출하는 방법
- **프로세스**: 단계별 지침
- **예시**: 구체적인 사용 예시
- **출력**: 예상 결과
- **참고**: 특별한 고려사항

## 템플릿:
```markdown
# 명령 이름

이 명령이 수행하는 작업에 대한 간략한 설명입니다.

## 사용법:
`/command-name [인수]`

## 프로세스:
1. 첫 번째 단계
2. 두 번째 단계
3. 세 번째 단계

## 예시:
- 예시 1
- 예시 2

## 참고:
- 중요한 고려사항
- 제한사항
```

## 모범 사례:
- 명령을 집중적이고 단일 목적으로 유지
- 매개변수 검증 포함
- 도움이 되는 오류 메시지 제공
- 예상 입력/출력 문서화
- 엣지 케이스 고려
- 최종화 전에 철저히 테스트