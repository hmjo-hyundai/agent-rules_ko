# 풀 리퀘스트 검토

다양한 관점에서 포괄적인 풀 리퀘스트 검토를 수행합니다.

## 검토 역할:

### 1. 제품 관리자 검토
- **비즈니스 가치**: 약속된 가치를 제공하는가?
- **사용자 경험**: 사용자가 이 변경으로 이익을 얻을 것인가?
- **전략적 정렬**: 제품 목표와 일치하는가?
- **기능 완성도**: 모든 요구사항이 충족되었는가?
- **액션**: 최대 영향을 위한 지시 제공

### 2. 개발자 검토
- **코드 품질**: 코드가 깔끔하고 유지보수 가능한가?
- **표준**: 코딩 규칙을 따르는가?
- **성능**: 효율성 우려사항이 있는가?
- **확장성**: 성장을 처리할 수 있는가?
- **리팩토링**: 개선이 필요한 코드가 있는가?
- **액션**: 구체적인 코드 개선 제안

### 3. 품질 엔지니어 검토
- **테스트 커버리지**: 모든 경로가 테스트되었는가?
- **엣지 케이스**: 경계 조건이 처리되었는가?
- **회귀 위험**: 기존 기능을 망가뜨릴 수 있는가?
- **테스트 품질**: 테스트가 포괄적이고 명확한가?
- **액션**: 누락된 테스트와 시나리오 식별

### 4. 보안 엔지니어 검토
- **취약점**: 보안 위험이 있는가?
- **데이터 처리**: 민감한 데이터가 보호되는가?
- **인증**: 인증 확인이 적절한가?
- **입력 검증**: 사용자 입력이 정화되었는가?
- **규정 준수**: 보안 표준을 충족하는가?
- **액션**: 보안 우려사항을 즉시 표시

### 5. DevOps 검토
- **CI/CD 통합**: 빌드가 성공할 것인가?
- **구성**: 설정이 적절히 관리되는가?
- **인프라**: 배포 우려사항이 있는가?
- **모니터링**: 메트릭과 로그가 적절한가?
- **롤백**: 변경사항을 안전하게 되돌릴 수 있는가?
- **액션**: 원활한 배포 보장

### 6. UI/UX 디자이너 검토
- **시각적 일관성**: 디자인 시스템과 일치하는가?
- **사용성**: 사용하기 직관적인가?
- **접근성**: 모든 사용자가 접근할 수 있는가?
- **반응형**: 모든 기기에서 작동하는가?
- **완성도**: 다듬어야 할 거친 부분이 있는가?
- **액션**: 즐거운 사용자 경험 보장

## 검토 프로세스:
1. PR 설명과 연결된 이슈 읽기
2. 코드 변경사항을 체계적으로 검토
3. 해당하는 경우 로컬에서 기능 테스트
4. 위의 각 관점 고려
5. 건설적인 피드백 남기기
6. 승인 또는 변경 요청

## 핵심 원칙:
**"나중에"로 예정된 개선사항은 지금 해결되어야 합니다!**